server {

	listen 80 ssl;
	listen [::]:80 ssl;
	server_name $IP ; 

	ssl_protocols TLSv1.3;
	ssl_certificate /etc/nginx/ssl/$IP.pem;
	ssl_certificate_key /etc/nginx/ssl/$IP-key.pem;

	set $cors_origin '*';  # Change to specific origins in production
    set $cors_methods 'GET, POST, OPTIONS';
    set $cors_headers 'Content-Type, Authorization';


	root /usr/share/nginx/html;
	index index.php index.html index.htm;

	location / {
        add_header 'Access-Control-Allow-Origin' $cors_origin;
        add_header 'Access-Control-Allow-Methods' $cors_methods;
        add_header 'Access-Control-Allow-Headers' $cors_headers;
		index index.html;
	}
}

server {
    listen 8000;
    server_name $IP;

	set $cors_origin '*';  # Change to specific origins in production
    set $cors_methods 'GET, POST, OPTIONS';
    set $cors_headers 'Content-Type, Authorization';

    location / {
        add_header 'Access-Control-Allow-Origin' $cors_origin;
        add_header 'Access-Control-Allow-Methods' $cors_methods;
        add_header 'Access-Control-Allow-Headers' $cors_headers;
        proxy_pass https://$IP:8000;  # Change 3000 to the target port for your backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

# Listen on port 8001 and redirect to the backend IP or service
server {
    listen 8001;
    server_name $IP;
	set $cors_origin '*';  # Change to specific origins in production
    set $cors_methods 'GET, POST, OPTIONS';
    set $cors_headers 'Content-Type, Authorization';

    location / {
        add_header 'Access-Control-Allow-Origin' $cors_origin;
        add_header 'Access-Control-Allow-Methods' $cors_methods;
        add_header 'Access-Control-Allow-Headers' $cors_headers;
        proxy_pass https://$IP:8001;  # Change 3001 to the target port for your backend
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}


server {
    listen 8002;
    server_name $IP;
	set $cors_origin '*';  # Change to specific origins in production
    set $cors_methods 'GET, POST, OPTIONS';
    set $cors_headers 'Content-Type, Authorization';

    location / {
        add_header 'Access-Control-Allow-Origin' $cors_origin;
        add_header 'Access-Control-Allow-Methods' $cors_methods;
        add_header 'Access-Control-Allow-Headers' $cors_headers;
        proxy_pass https://$IP:8002;  
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}


server {
    listen 8003;
    server_name $IP;
	set $cors_origin '*';  # Change to specific origins in production
    set $cors_methods 'GET, POST, OPTIONS';
    set $cors_headers 'Content-Type, Authorization';

    location / {
        add_header 'Access-Control-Allow-Origin' $cors_origin;
        add_header 'Access-Control-Allow-Methods' $cors_methods;
        add_header 'Access-Control-Allow-Headers' $cors_headers;
        proxy_pass https://$IP:8003;  
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}

server {
    listen 8004;
    server_name $IP;
	set $cors_origin '*';  # Change to specific origins in production
    set $cors_methods 'GET, POST, OPTIONS';
    set $cors_headers 'Content-Type, Authorization';

    location / {
        add_header 'Access-Control-Allow-Origin' $cors_origin;
        add_header 'Access-Control-Allow-Methods' $cors_methods;
        add_header 'Access-Control-Allow-Headers' $cors_headers;
        proxy_pass https://$IP:8004;  
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
server {
    listen 80;
    server_name 10.12.3.13;

    return 301 https://$host$request_uri;  # Redirect HTTP to HTTPS
}

server {
    listen 433 ssl;
    server_name 10.12.3.13;

	ssl_protocols TLSv1.3;
	ssl_certificate /etc/nginx/ssl/10.12.3.13.pem;
	ssl_certificate_key /etc/nginx/ssl/10.12.3.13-key.pem;

    set $cors_origin '*';  
    set $cors_methods 'GET, POST, OPTIONS, PATCH, DELETE, PUT';
    set $cors_headers 'Content-Type, Authorization';

    location / {
        root /usr/share/nginx/html;  # Path to your static files
        index index.html;  # Default file to serve
        try_files $uri $uri/ =404;  # Return 404 if the file is not found
    }

    location /user-management/ {
        proxy_pass http://user-management:8000/;  # Routing to user-management service
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /remote-players/ {
        proxy_pass http://remote-players:8004/;  # Routing to remote-players service
        # Include other proxy headers...
    }

    location /chat/ {
        proxy_pass http://chat:8002/;  # Routing to chat service
        # Include other proxy headers...
    }

    location /solidity/ {
        proxy_pass http://solidity_service:8001/;  # Routing to solidity service
        # Include other proxy headers...
    }

    # CORS headers
    add_header 'Access-Control-Allow-Origin' $cors_origin;
    add_header 'Access-Control-Allow-Methods' $cors_methods;
    add_header 'Access-Control-Allow-Headers' $cors_headers;
}
